name: CI/CD for DevOps Project

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and test simple-api
        run: mvn clean verify -f ./simple-api/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # # 添加 SonarCloud 
      # - name: SonarCloud analysis
      #   run: mvn -B verify sonar:sonar -Dsonar.projectKey=bipt-lyle_devops-livecoding -Dsonar.organization=bipt-lyle -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -f ./simple-api/pom.xml
    
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push simple-api
        uses: docker/build-push-action@v3
        with:
          context: ./simple-api
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}


      - name: Build image and push database
        uses: docker/build-push-action@v3
        with:
          context: ./database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push http-server
        uses: docker/build-push-action@v3
        with:
          context: ./http-server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-http-server:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Create SSH key file from GitHub secret
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
      
          
      - name: Run Ansible Playbook
        run: ansible-playbook -i ./ansible/inventories/setup.yml ./ansible/playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          ANSIBLE_SSH_PRIVATE_KEY_FILE: ${{ github.workspace }}/private_key.pem
        

    